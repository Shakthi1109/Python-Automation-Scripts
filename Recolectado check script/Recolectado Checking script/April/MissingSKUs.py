import json, csv, requests, time
from graphqlclient import GraphQLClient
from http.client import IncompleteRead
from datetime import datetime, timedelta


accountId = 'PALACIO'
oauth_url = 'https://palacio.api.fluentretail.com:443/oauth/token?username=elpalaciodehierro_admin&password=GT8Y4Q&client_id=PALACIO&client_secret=44f824ad-eb5d-4936-af10-86ebbcf5be61&grant_type=password&scope=api'

graphql_url = 'https://PALACIO.api.fluentretail.com/graphql'


def get_token():
    auth_token_response = requests.post(oauth_url)
    if auth_token_response.status_code != 200:
        print("Couldn't get auth token {}".format(auth_token_response.status_code))
    access_token = 'bearer ' + auth_token_response.json()['access_token']
    #print("Access token: {}".format(access_token))
    return access_token



with open('testing.csv','a') as f, open('output.csv','a') as output:

    f.write('S.No, Order Id, SKU Refs, Fulfilment ID, ff Status, SKU REFS, Result\n')
    output.write('Order Id, Status, CreatedOn, SKU Refs, Required Quantity, Price\n')

    def get_all_data():

        inputIdList
        global response
        sno=0

        for ids in inputIdList:

            page_query = "query{"
            page_query += "orderById(id: "+str(ids)+ "){id createdOn status items(first:100){edges{node{ref quantity price}}}fulfilments(first:100){edges{node{id status items(first:100){edges{node{ref}}}}}}}}"

            client = GraphQLClient(graphql_url)
            token = get_token()
            client.inject_token(token)
            response = client.execute(page_query)
            response = json.loads(response)
            #print(response)

            if response is not None:
                sno=sno+1
                print(sno)
                with open('testing.csv','a') as f, open('output.csv','a') as output:


                    orderSKU=[]
                    FulfilmentSKU=[]
                    quantity=[]
                    price=[]

                    f.write(str(sno)+','+response['data']['orderById']['id']+'\n')

                    n=len(response['data']['orderById']['items']['edges'])
                    for k in range(0,n):
                        f.write(','+','+response['data']['orderById']['items']['edges'][k]['node']['ref']+'\n')
                        orderSKU.append(response['data']['orderById']['items']['edges'][k]['node']['ref'])
                        quantity.append(response['data']['orderById']['items']['edges'][k]['node']['quantity'])
                        price.append(response['data']['orderById']['items']['edges'][k]['node']['price'])

                    o=len(response['data']['orderById']['fulfilments']['edges'])

                    for l in range(0,o):
                        f.write(','+','+','+response['data']['orderById']['fulfilments']['edges'][l]['node']['id'])
                        f.write(','+response['data']['orderById']['fulfilments']['edges'][l]['node']['status']+'\n')


                        p=len(response['data']['orderById']['fulfilments']['edges'][l]['node']['items']['edges'])

                        for mm in range(0,p):
                            f.write(','+','+','+','+','+response['data']['orderById']['fulfilments']['edges'][l]['node']['items']['edges'][mm]['node']['ref']+'\n')
                            FulfilmentSKU.append(response['data']['orderById']['fulfilments']['edges'][l]['node']['items']['edges'][mm]['node']['ref'])

                        # if(len(set(orderSKU).symmetric_difference(set(FulfilmentSKU)))==0):
                        #     f.write(','+','+','+','+','+'All SKUs present'+'\n')
                        # else:
                        #     f.write(','+','+','+','+','+str(set(orderSKU).symmetric_difference(set(FulfilmentSKU)))+'\n')

                    if(len(orderSKU)>len(FulfilmentSKU)):
                        f.write(','+','+','+','+','+','+'Unassigned Items'+','+str(set(orderSKU).symmetric_difference(set(FulfilmentSKU)))+'\n')
                    elif(len(orderSKU)<len(FulfilmentSKU)):
                        f.write(','+','+','+','+','+','+'Alert check'+','+str(set(FulfilmentSKU).symmetric_difference(set(orderSKU)))+'\n')
                    else:
                        f.write(','+','+','+','+','+','+'All SKU assigned'+','+str(set(FulfilmentSKU).symmetric_difference(set(orderSKU)))+'\n')




f.close()
output.close()

start = time.time()

get_all_data()

print("Time taken: " + str((time.time()-start)/60) + " minutes")
